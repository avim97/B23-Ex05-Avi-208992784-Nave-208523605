<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AABmX10IZl9dbWZfXeBmX13+Zl9d/2ZfXf9mX13/Zl9d/2ZfXf9mX13/Zl9d/2ZfXf9mX13/Zl9d/2Zf
        Xf9lXlz/XVhW/1xXVf9cV1X/XFdV/1xXVf9cV1X/XFdV/1xXVf9cV1X/XFdV/1xXVf9cV1X/XFdV/1xX
        VeJcV1VwXVdWCWZfXW5mX13yZl9d/2liYP9pYmD/aWJg/2liYP9pYmD/aWJg/2liYP9pYmD/aWJg/2li
        YP9pYmD/aWJg/2VeXP9eWFb/X1pY/19aWP9fWlj/X1pY/19aWP9fWlj/X1pY/19aWP9fWlj/X1pY/19a
        WP9fWlj/XFdV/1xXVfNcV1VwZl9d3mZfXf91bmz/g3t5/4N7ef+De3n/g3t5/4N7ef+De3n/g3t5/4N7
        ef+De3n/g3t5/4N7ef9/d3X/Z2Ff/2BaWP91b2z/enNw/3pzcP96c3D/enNw/3pzcP96c3D/enNw/3pz
        cP96c3D/enNw/3pzcP9sZmP/XFdV/1xXVeBmX139aGFf/4N7ef+KgoD/iYF//4mBf/+JgX//iYF//4mB
        f/+JgX//iYF//4mBf/+JgX//iYF//4R8ev9oYV//YFtZ/3pzcP+AeHX/gHh1/4B4df+AeHX/gHh1/4B4
        df+AeHX/gHh1/4B4df+AeHX/gXh1/3pycP9fWVf/XFdV/mZfXf9pYmD/g3t5/4mBf/+JgX//iYF//4h/
        f/+JgH//iYF//4mBf/+If3//iIB//4mBf/+JgX//hHx6/2hhX/9gW1n/enNw/4B4df+AeHX/gHh1/4B4
        df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/enNw/19aWP9cV1X/Zl9d/2liYP+De3n/iYF//4mB
        f/+OiYD/oKaC/5KQgP+If3//jIV//56jgf+WloD/iYF//4mBf/+EfHr/aGFf/2BbWf96c3D/gHh1/4B4
        df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df96c3D/X1pY/1xXVf9mX13/aWJg/4N7
        ef+JgX//iH9//6Cmgv/G5Yb/uc+F/5eXgf+rt4P/xuSG/7THhP+Kg3//iYF//4R8ev9oYV//YFtZ/3pz
        cP+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/gHh1/3pzcP9fWlj/XFdV/2Zf
        Xf9pYmD/g3t5/4mBf/+JgH//kpCA/7nPhf/H5Yb/wduF/8Xihv/D34b/oaiC/4mBf/+JgX//hHx6/2hh
        X/9gW1n/enNw/4B4df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/enNw/19a
        WP9cV1X/Zl9d/2liYP+De3n/iYF//4mBf/+If3//l5eB/8Hbhf/H5Yb/xuSG/6m1g/+JgX//iYF//4mB
        f/+EfHr/aGFf/2BbWf96c3D/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4
        df96c3D/X1pY/1xXVf9mX13/aWJg/4N7ef+JgX//iYF//4yFf/+qt4P/xeKG/8bkhv/H5Yb/uc+F/5ST
        gP+JgH//iYF//4R8ev9oYV//YFtZ/3pzcP+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4
        df+AeHX/gHh1/3pzcP9fWlj/XFdV/2ZfXf9pYmD/g3t5/4mBf/+If3//nqOB/8bkhv/D34b/qbSD/7nP
        hf/I6Ib/ssSE/4qDf/+JgX//hHx6/2hhX/9gW1n/enNw/4B4df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4
        df+AeHX/gHh1/4B4df+AeHX/enNw/19aWP9cV1X/Zl9d/2liYP+De3n/iYF//4iAf/+WloD/tMeE/6Gn
        gv+JgX//lJOA/7LEhP+krYL/iYJ//4mBf/+EfHr/aGFf/2BbWf96c3D/gHh1/4B4df+AeHX/gHh1/4B4
        df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df96c3D/X1pY/1xXVf9mX13/aWJg/4N7ef+JgX//iYF//4mB
        f/+Lg3//iYF//4mBf/+JgH//ioN//4mCf/+JgX//iYF//4R8ev9oYV//YFtZ/3pzcP+AeHX/gHh1/4B4
        df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/gHh1/3pzcP9fWlj/XFdV/2ZfXf9pYmD/g3t5/4mB
        f/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//hHx6/2hhX/9gW1n/enNw/4B4
        df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/gHh1/4B4df+AeHX/enNw/19aWP9cV1X/Zl9d/2hh
        X/9/d3X/hHx6/4R8ev+EfHr/hHx6/4R8ev+EfHr/hHx6/4R8ev+EfHr/hHx6/4R8ev+AeHb/aGFf/2Ba
        WP92b2z/e3Nw/3tzcP97c3D/e3Nw/3tzcP97c3D/e3Nw/3tzcP97c3D/e3Nw/3tzcP92b2z/X1lX/1xX
        Vf9mX13/Zl9d/2hhX/9pYmD/aWJg/2liYP9pYmD/aWJg/2liYP9pYmD/aWJg/2liYP9pYmD/aWJg/2li
        YP9lXlz/XVhW/15ZV/9fWlj/X1pY/19aWP9fWlj/X1pY/19aWP9fWlj/X1pY/19aWP9fWlj/X1pY/19a
        WP9cV1X/XFdV/2ZfXf9mX13/aGFf/2liYP9pYmD/aWJg/2liYP9pYmD/aWJg/2liYP9pYmD/aWJg/2li
        YP9pYmD/aWJg/2VeXP9dWFb/XllX/19aWP9fWlj/X1pY/19aWP9fWlj/X1pY/19aWP9fWlj/X1pY/19a
        WP9fWlj/X1pY/1xXVf9cV1X/Zl9d/2hhX/9/d3X/hHx6/4R8ev+EfHr/hHx6/4R8ev+EfHr/hHx6/4R8
        ev+EfHr/hHx6/4R8ev+AeHb/aGFf/2BaWP92b2z/e3Nw/3tzcP97c3D/e3Nw/3tzcP97c3D/e3Nw/3tz
        cP97c3D/e3Nw/3tzcP92b2z/X1lX/1xXVf9mX13/aWJg/4N7ef+JgX//iYF//4mBf/+JgX//iYF//4mB
        f/+JgX//iYF//4mBf/+JgX//iYF//4R8ev9oYV//YFtZ/3pzcP+AeHX/gHh1/4F4df+BeHT/fnp5/318
        fP+AeXf/gXd0/4B4df+AeHX/gHh1/3pzcP9fWlj/XFdV/2ZfXf9pYmD/g3t5/4mBf/+JgX//iYF//4mB
        f/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//hHx6/2hhX/9gW1n/enNw/4B4df+AeHT/fH1+/2WV
        q/9TqM3/UKzU/1ijw/9vi5f/f3l2/4B4df+AeHX/enNw/19aWP9cV1X/Zl9d/2liYP+De3n/iYF//4mB
        f/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+EfHr/aGFf/2BbWf96c3D/gXh1/3x9
        fv9XpMX/Qrru/0K77/9Duuz/Qbzw/0a25v9nk6X/gHh1/4B4df96c3D/X1pY/1xXVf9mX13/aWJg/4N7
        ef+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//iYF//4R8ev9oYV//YFtZ/3pz
        cP+BeHT/ZZar/0K77v9Ks+D/ZZWp/26LmP9bob//Q7rs/0qz4P92g4n/gXh0/3pzcP9fWlj/XFdV/2Zf
        Xf9pYmD/g3t5/4mBf/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//hHx6/2hh
        X/9gW1n/e3Nw/356ef9TqM3/Qrvv/2WVqf+Bd3P/gXdy/318fP9Sqc//Qrvv/2iSpf+Bd3P/enNw/19a
        WP9cV1X/Zl9d/2liYP+De3n/iYF//4mBf/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//iYF//4mB
        f/+EfHr/aGFf/2BbWf97c3D/fXx8/1Cs1P9Duuz/bouY/4F3c/+AeHX/gHh0/1miwf9BvPD/ZJet/4F3
        c/96c3D/X1pY/1xXVf9mX13/aWJg/4N7ef+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//iYF//4mB
        f/+JgX//iYF//4R8ev9oYV//YFtZ/3tzcP+AeXf/WKPD/0G88P9bob//fXx8/4B4df90hY3/S7Hc/0S5
        7P9tjZv/gXdz/3pzcP9fWlj/XFdV/2ZfXf9pYmD/g3t5/4mBf/+JgX//iYF//4mBf/+JgX//iYF//4mB
        f/+JgX//iYF//4mBf/+JgX//hHx6/2hhX/9gW1n/enNw/4F4dP9vi5f/Rrbm/0O67P9Sqc//WaLB/0yx
        3P9Cu/D/U6nO/3x9fv+BeHX/enNw/19aWP9cV1X/Zl9d/2liYP+De3n/iYF//4mBf/+JgX//iYF//4mB
        f/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+EfHr/aGFf/2BbWf96c3D/gHh1/395dv9ok6X/SrPg/0K7
        7/9BvPH/Q7ns/1Kpzv91hIv/gXd0/4B4df96c3D/X1pY/1xXVf9mX13/aWJg/4N7ef+JgX//iYF//4mB
        f/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//iYF//4R8ev9oYV//YFtZ/3pzcP+AeHX/gHh1/4B4
        df92g4n/aJKl/2SXrf9sjZv/fH1+/4F3dP+AeHX/gHh1/3pzcP9fWlj/XFdV/2ZfXf1oYV//g3t5/4qC
        gP+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//iYF//4mBf/+JgX//hHx6/2hhX/9gW1n/enNw/4B4
        df+AeHX/gHh1/4F4dP+Bd3P/gXdz/4F3c/+BeHX/gHh1/4B4df+BeHX/enJw/19ZV/9cV1X+Zl9d3mZf
        Xf91bmz/g3t5/4N7ef+De3n/g3t5/4N7ef+De3n/g3t5/4N7ef+De3n/g3t5/4N7ef9/d3X/Z2Ff/2Ba
        WP91b2z/enNw/3pzcP96c3D/enNw/3pzcP96c3D/enNw/3pzcP96c3D/enNw/3pzcP9sZmP/XFdV/1xX
        VeFmX11uZl9d8mZfXf9pYmD/aWJg/2liYP9pYmD/aWJg/2liYP9pYmD/aWJg/2liYP9pYmD/aWJg/2li
        YP9lXlz/XlhW/19aWP9fWlj/X1pY/19aWP9fWlj/X1pY/19aWP9fWlj/X1pY/19aWP9fWlj/X1pY/1xX
        Vf9cV1XzXFdVcWZfXQhmX11tZl9d4GZfXf5mX13/Zl9d/2ZfXf9mX13/Zl9d/2ZfXf9mX13/Zl9d/2Zf
        Xf9mX13/Zl9d/2VeXP9dWFb/XFdV/1xXVf9cV1X/XFdV/1xXVf9cV1X/XFdV/1xXVf9cV1X/XFdV/1xX
        Vf9cV1X/XFdV4lxXVXBdWFYJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>